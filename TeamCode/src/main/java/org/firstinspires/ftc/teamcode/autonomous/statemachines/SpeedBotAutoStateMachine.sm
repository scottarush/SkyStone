%class AutonomousController
%package org.firstinspires.ftc.teamcode.autonomous
// http://smc.sourceforge.net/
%start SpeedBotAutoStateMachine::Idle

%map SpeedBotAutoStateMachine
%%
    Idle
    {
        evStartDriveToStones jump(GetStones::Start) { }
        evStartDragFoundation jump(DragFoundation::Start) { }
    }
%%

    // StateMachine for GetStones sequence
%map GetStones
%%
    /*
    * drives forward close enough to be able to locate a Skystone with the camera
    */
    Start
        Entry {
            openHand();
            // start drive forward
            linearDrive(10d);
        }
    {
        evDriveComplete nil { checkStoneRecognition(); }
        evDriveFail DriveForwardToStone {}
        // Triggered by checkStoneRecognition if we found a Skystone
        evSkystoneFound StrafeToStone { strafeToSkystone(10d,2000); }
        // Triggered by checkStoneRecognition if we found a Skystone
        evStoneFound StrafeToStone { strafeToStone(10d,2000); }
        // Triggered by checkStoneRecognition if no stone was found
        evNoStoneFound DriveForwardToStone {   }
    }

    StrafeToStone
        Entry{
         }
    {
        evDriveComplete DriveForwardToStone {}
    }

    DriveForwardToStone
        Entry{
            linearDrive(8d);
        }
    {
        evDriveComplete GrabStone {}
    }
    /*
    * Stop after drive forward and check to see if we are at foundation.
    */
    GrabStone
        Entry{
            // close the hook and wait for it to stop so that we grab the block
            closeHand();
            startHookTimer();
         }
    {
        evHookTimeout BackupToBeginDrag { }
    }
    /*
    * Backup to begin the drag
    */
    BackupToBeginDrag
        Entry{
            linearDrive(-18d);
         }
    {
        evDriveComplete [ctxt.isBlueAlliance() == true] RotateTowardBridge {
            // Rotate CCW toward the bridge
            rotate(+90);
        }
        evDriveComplete [ctxt.isBlueAlliance() == false] RotateTowardBridge {
            // Rotate CW toward the bridege
            rotate(-90);
        }
    }

    /*
    * Rotates toward the bridge and then starts the linear drive to the bridge
    */
    RotateTowardBridge
    {
        evDriveComplete DragStone  { linearDrive(72d); }
    }
    /*
    * Drags the stone back under the bridge
    */
    DragStone
    {
        evDriveComplete ReleaseStone {}
    }

    /*
    *
    */
    ReleaseStone
        Entry {
            openHand();
            //  backup to the line
            linearDrive(-37d);
        }
    {

        evDriveComplete Complete { }
    }
    /*
    * Final success state
    */
    Complete
        Entry{
            stop();
        }
    {

    }
%%
// StateMachine for DragFoundation sequence
%map DragFoundation
%%
    /*
    * drive forward 26 inches.  This should push the foundation by 2 inches
    */
    Start
        Entry {
            openHook();
            // Raise crane by 2 inches
            moveCrane(2d);
            // start drive forward
            linearDrive(26d);
        }
    {
        evDriveComplete GrabFoundation {  }
     }

    GrabFoundation
        Entry {
            closeHook();
            startHookTimer();
        }
    {
        evHookTimeout DragFoundationBack {  }
    }

    DragFoundationBack
        Entry {
            linearDrive(-20d);
        }
    {
        evDriveComplete [ctxt.isBlueAlliance() == true] RotateFoundation {
            // Rotate CCW toward the blue line
            rotate(+20);
    }
        evDriveComplete [ctxt.isBlueAlliance() == false] RotateFoundation {
            // Rotate CW toward the red line
            rotate(-20);
        }
    }

    RotateFoundation
    {
        evDriveComplete nil {
            openHook();
            startHookTimer();
        }
        evHookTimeout [ctxt.isBlueAlliance() == true] RotateToBackup {
            // Rotate CCW to line up backwards to the skybridge
            rotate(+70);
        }
        evHookTimeout [ctxt.isBlueAlliance() == false] RotateToBackup {
            // Rotate CW to line up backwards to the skybridge
            rotate(-70);
        }
    }

    RotateToBackup
    {
        evDriveComplete BackupToBridge { linearDrive(-32d); }

    }
    BackupToBridge
    {
        evDriveComplete Complete { stop(); }
    }

    Complete
    {

    }
%%
