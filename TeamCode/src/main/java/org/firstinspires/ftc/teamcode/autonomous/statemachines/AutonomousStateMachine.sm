%class AutonomousController
%package org.firstinspires.ftc.teamcode.autonomous

%start AutonomousStateMachine::Idle

%map AutonomousStateMachine
%%

    /*
    * idle state until started by controller
    */
    Idle
    {
        evStart DriveToStones {}
    }


    /*
    * drives forward up to the stones
    */
    DriveToStones
        Entry {
            setLogMessage("DriveToStones");
            openHook();
            // start drive forward
            linearDrive(30d);
        }
    {
        evDriveComplete DriveToStoneSuccess {}
 //       evDriveFail DriveToStoneFailure {}
    }


    /*
    * Stop after drive forward and check to see if we are at foundation.
    */
    DriveToStoneSuccess
        Entry{
            setLogMessage("DriveToStoneSuccess");
            // close the hook and wait for it stop
            closeHook();
            // While we are at it retract the arm.
            retractArm();
            startHookTimer();
        }
    {
        evHookTimeout BackupToBeginDrag { }
    }
    /*
    * Backup to begin the drag
    */
    BackupToBeginDrag
        Entry{
            setLogMessage("BackupToBeginDrag");
            linearDrive(-6);
         }
    {
        evDriveComplete [ctxt.isBlueTeam() == true] BlueTeamRotateTowardBridge { }
        evDriveComplete [ctxt.isBlueTeam() == false] RedTeamRotateTowardBridge { }
    }

    /*
    *
    */
    BlueTeamRotateTowardBridge
        Entry{
            setLogMessage("BlueTeamRotateTowardBridge");
            rotate(-90);
        }
    {
        evRotationComplete DragStone { }
    }
    /*
    *
    */
    RedTeamRotateTowardBridge
        Entry{
             setLogMessage("RedTeamRotateTowardBridge");
            rotate(+90);
         }
    {
        evRotationComplete DragStone { }
    }
    /*
    * Drag the stone back
    */
    DragStone
        Entry {
            setLogMessage("DragStone");
            strafeDrive(72);
        }
    {
        evDriveComplete nil {
            openHook();
            startHookTimer();
        }
        evHookTimeout BackupToRelease {}
    }

    /*
    * Backup to release the arm.
    */
    BackupToRelease
        Entry {
            setLogMessage("BackupToRelease");
            linearDrive(-12);
        }
    {
        evDriveComplete Success { }
    }

    /*
    * Final success state
    */
    Success
        Entry{
            setLogMessage("Success");
        }
    {

    }
%%

